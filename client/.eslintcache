[{"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js":"1","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js":"2","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu.js":"3","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menu.js":"4","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\side-menu.js":"5","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unsplash-menu.js":"6","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu-item.js":"7","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\main-menu.js":"8","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather.js":"9","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\weather-menu.js":"10","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\WidgetContext.js":"11","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js":"12"},{"size":293,"mtime":1610852729905,"results":"13","hashOfConfig":"14"},{"size":272,"mtime":1611011690551,"results":"15","hashOfConfig":"14"},{"size":3590,"mtime":1611091712565,"results":"16","hashOfConfig":"14"},{"size":396,"mtime":1610323265688,"results":"17","hashOfConfig":"14"},{"size":765,"mtime":1610853959392,"results":"18","hashOfConfig":"14"},{"size":4901,"mtime":1610569410865,"results":"19","hashOfConfig":"14"},{"size":421,"mtime":1611010667884,"results":"20","hashOfConfig":"14"},{"size":1195,"mtime":1611091251417,"results":"21","hashOfConfig":"14"},{"size":5728,"mtime":1611090476087,"results":"22","hashOfConfig":"14"},{"size":1365,"mtime":1611016908797,"results":"23","hashOfConfig":"14"},{"size":1052,"mtime":1611016238924,"results":"24","hashOfConfig":"14"},{"size":3325,"mtime":1611016855558,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8trkmv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js",[],["54","55"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menu.js",["56"],"import React, { useEffect } from 'react';\r\nimport {useAuth} from \"./menu\"\r\n\r\nconst BackgroundMenu = () => {\r\n    const { currentMenu, previousMenu } = useAuth();\r\n    useEffect(() => {\r\n        console.log(currentMenu)\r\n        console.log(previousMenu)\r\n    }, [])\r\n    return ( \r\n        <div>\r\n            <h1>Background Menu</h1>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BackgroundMenu;",["57","58"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\side-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unsplash-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu-item.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\main-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather.js",["59"],"import React, { useEffect, useState } from 'react';\r\nimport \"../../css/weather/weather.css\"\r\nimport Moment from \"react-moment\";\r\nimport { useAuth } from '../../context/WidgetContext';\r\n\r\n//ICONS\r\nimport {ReactComponent as SunnyIcon} from \"../../icons/weather/wb_sunny-black-24dp.svg\"\r\n\r\n\r\nconst Weather = () => {\r\n    const {weatherToggled, setLocationDisabled} = useAuth();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const date = new Date()\r\n\r\n\r\n    useEffect(() => { \r\n        weatherToggled && getWeather()\r\n    }, [weatherToggled])\r\n\r\n    const getWeather = async() => {\r\n        const location = await fetchLocation()\r\n        //if location services are blocked\r\n        if(location.denied) {\r\n            return;\r\n        }\r\n        //fetch weather api with city\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location.city}&appid=${process.env.REACT_APP_OPEN_WEATHER_API_KEY}&units=imperial`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            formatData(data)\r\n        })\r\n    }\r\n\r\n\r\n    const formatData = (data) => {\r\n        const desc = capitalizeFirstLetter(data.weather[0].description);\r\n        const temp = Math.trunc(data.main.temp);\r\n        const city = data.name;\r\n        const formattedData = {\r\n            description: desc,\r\n            temperature: temp,\r\n            city: city\r\n        }\r\n        setWeatherData(formattedData)\r\n    }\r\n\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    \r\n    const fetchLocation = async () => {\r\n        const coords = await getCoords()\r\n        //if user has location services blocked\r\n        if(coords.denied) {\r\n            return coords;\r\n        }\r\n        // set cords in local storage\r\n        const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n        const updatedWeatherData = {\r\n            ...localWeatherData,\r\n            coords: coords\r\n        }\r\n        localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData));\r\n        //fetch city with coords\r\n        return await getCity(coords);\r\n    }\r\n    \r\n    const getCoords = async() => {\r\n        return new Promise(function(resolve) {\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                if(position) {\r\n                    //set coords in local storage\r\n                    const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                    const updatedWeatherData = {\r\n                        ...localWeatherData,\r\n                        locationServices: true\r\n                    }\r\n                    localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData))\r\n                    setLocationDisabled(false);\r\n                    //resolve promise w/ coords\r\n                    resolve({longitude: position.coords.longitude, latitude: position.coords.latitude})\r\n                }\r\n            // if user denied geolocation services\r\n            }, function(error) {\r\n                if(error.code === error.PERMISSION_DENIED) {\r\n                    // set location disabled in local storage\r\n                    const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                    const updatedWeatherData = {\r\n                        ...localWeatherData,\r\n                        locationServices: false\r\n                    }\r\n                    localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData))\r\n                    setLocationDisabled(true);\r\n                    //resolve promise w/ error\r\n                    resolve({denied: true, error: error});\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    const getCity = async(position) => {\r\n        return new Promise(function(resolve) {\r\n            // check local storage for stored city\r\n            const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n            if(localWeatherData.coords && localWeatherData.city) {\r\n                //if user hasn't changed their location\r\n                if(localWeatherData.coords.longitude === position.longitude && localWeatherData.coords.latitude === position.latitude) {\r\n                    resolve({city: localWeatherData.city});\r\n                    return;\r\n                }\r\n            }\r\n            // if no local storage data, fetch city from api\r\n            fetch(`https://us1.locationiq.com/v1/reverse.php?key=${process.env.REACT_APP_LOCATIONIQ_API_KEY}&lat=${position.latitude}&lon=${position.longitude}&format=json`)\r\n            .then((res => res.json()))\r\n            .then(data => {\r\n                const city = data.address.city;\r\n                // set city in local storage\r\n                const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                const updatedWeather = {\r\n                    ...localWeatherData,\r\n                    city: city\r\n                }\r\n                localStorage.setItem(\"weather\", JSON.stringify(updatedWeather));\r\n                //resolve promise with city\r\n                resolve({city: city})\r\n            })\r\n        })\r\n    }\r\n\r\n    return weatherData && weatherToggled && ( \r\n        <div className=\"content-weather\">\r\n            <span className=\"content-weather-description\">\r\n                <SunnyIcon/>\r\n                <p>{weatherData.description}</p>\r\n            </span>\r\n            <span className=\"content-weather-body\">\r\n                <h1>{weatherData.temperature}°</h1>\r\n                <p>{weatherData.city}</p>\r\n            </span>\r\n            <Moment className=\"content-weather-date\" format=\"ddd\" date={date}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Weather;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\weather-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\WidgetContext.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":9,"column":8,"nodeType":"66","endLine":9,"endColumn":10,"suggestions":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"64","severity":1,"message":"70","line":18,"column":8,"nodeType":"66","endLine":18,"endColumn":24,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentMenu' and 'previousMenu'. Either include them or remove the dependency array.","ArrayExpression",["74"],["72"],["73"],"React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [currentMenu, previousMenu]",{"range":"80","text":"81"},"Update the dependencies array to be: [getWeather, weatherToggled]",{"range":"82","text":"83"},[262,264],"[currentMenu, previousMenu]",[539,555],"[getWeather, weatherToggled]"]