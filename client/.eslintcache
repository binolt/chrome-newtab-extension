[{"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js":"1","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js":"2","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js":"3","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js":"4","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\menu-context.js":"5","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\modal.js":"6","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu\\menu.js":"7","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js":"8","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js":"9","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\transition-container.js":"10","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js":"11","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-menu.js":"12","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\upload-menu.js":"13","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js":"14","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\favorited-menu.js":"15","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\image-item.js":"16","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\featured-menu.js":"17","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unplash-menu.js":"18","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\unsplash-config.js":"19","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\todo-list-menu.js":"20","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\board.js":"21","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\column.js":"22","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\task.js":"23","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\key-press.js":"24","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\quotes\\quote-menu.js":"25","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\quotes\\quotes.js":"26","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\quote-service.js":"27"},{"size":243,"mtime":1612580676853,"results":"28","hashOfConfig":"29"},{"size":246,"mtime":1612050329442,"results":"30","hashOfConfig":"29"},{"size":3288,"mtime":1613600667730,"results":"31","hashOfConfig":"29"},{"size":3425,"mtime":1613601541106,"results":"32","hashOfConfig":"29"},{"size":636,"mtime":1612580676845,"results":"33","hashOfConfig":"29"},{"size":1193,"mtime":1613335201479,"results":"34","hashOfConfig":"29"},{"size":7603,"mtime":1613598284661,"results":"35","hashOfConfig":"29"},{"size":4197,"mtime":1613335201480,"results":"36","hashOfConfig":"29"},{"size":1076,"mtime":1612580676845,"results":"37","hashOfConfig":"29"},{"size":578,"mtime":1613431910857,"results":"38","hashOfConfig":"29"},{"size":899,"mtime":1612046518919,"results":"39","hashOfConfig":"29"},{"size":1589,"mtime":1613335201479,"results":"40","hashOfConfig":"29"},{"size":2486,"mtime":1613335201477,"results":"41","hashOfConfig":"29"},{"size":636,"mtime":1613335201482,"results":"42","hashOfConfig":"29"},{"size":542,"mtime":1613485576144,"results":"43","hashOfConfig":"29"},{"size":3748,"mtime":1613581911258,"results":"44","hashOfConfig":"29"},{"size":1075,"mtime":1613492281195,"results":"45","hashOfConfig":"29"},{"size":3575,"mtime":1613581533025,"results":"46","hashOfConfig":"29"},{"size":186,"mtime":1613492235782,"results":"47","hashOfConfig":"29"},{"size":1114,"mtime":1613585284408,"results":"48","hashOfConfig":"29"},{"size":5688,"mtime":1613596993216,"results":"49","hashOfConfig":"29"},{"size":2693,"mtime":1613592742440,"results":"50","hashOfConfig":"29"},{"size":3217,"mtime":1613586253906,"results":"51","hashOfConfig":"29"},{"size":1093,"mtime":1611092318727,"results":"52","hashOfConfig":"29"},{"size":1121,"mtime":1613600786714,"results":"53","hashOfConfig":"29"},{"size":856,"mtime":1613601725168,"results":"54","hashOfConfig":"29"},{"size":209,"mtime":1613598099383,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"8trkmv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js",[],["115","116"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js",["117","118"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\menu-context.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\modal.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu\\menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js",["119"],"import React, { useEffect, useState } from 'react';\r\nimport { useGlobalAuth } from '../../../context/global-context';\r\nimport weatherService from \"../../../services/weather-service\";\r\nimport WeatherIcon from './weather-icon';\r\n\r\n//ICONS\r\n\r\n\r\nconst Weather = () => {\r\n    const {weatherToggled, setLocationDenied} = useGlobalAuth();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n\r\n    useEffect(() => { \r\n        weatherToggled && getWeather()\r\n    }, [weatherToggled])\r\n\r\n    const getWeather = async() => {\r\n        const location = await fetchLocation()\r\n        //if location services are blocked\r\n        if(location.denied) {\r\n            return;\r\n        }\r\n        //fetch weather api with city\r\n        const data = await weatherService.fetchWeather(location);\r\n        formatData(data)\r\n    }\r\n\r\n    const fetchLocation = async () => {\r\n        return new Promise(async function(resolve) {\r\n            const data = await getCoords()\r\n            //if user has location services blocked\r\n            if(data.denied) {\r\n                updateLocalStorage(\"denied\", true)\r\n                setLocationDenied(true);\r\n                return data;\r\n            }\r\n            // set cords in local storage\r\n            updateLocalStorage(\"coords\", data);\r\n            resolve(data)\r\n        })\r\n    }\r\n    \r\n    const getCoords = async() => {\r\n        return new Promise(function(resolve) {\r\n            if(navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(function(position) {\r\n                    //set location enabled in LS\r\n                    updateLocalStorage(\"denied\", false)\r\n                    setLocationDenied(false);\r\n                    //resolve promise w/ coords\r\n                    resolve({longitude: position.coords.longitude, latitude: position.coords.latitude});\r\n                // ERROR HANDLING\r\n                }, function(error) {\r\n                    const data = handleGeolocationError(error);\r\n                    resolve(data);\r\n                })\r\n            } else {\r\n                console.log(\"Your browser does not support geolocation services.\")\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleGeolocationError = (err) => {\r\n        switch(err.code) {\r\n            case err.PERMISSION_DENIED:\r\n                return {denied: true, error: err}\r\n            case err.POSITION_UNAVAILABLE:\r\n                return {unavailable: true, error: err}\r\n            case err.TIMEOUT:\r\n                return {timeout: true, error: err}\r\n            case err.UNKNOWN_ERROR:\r\n                return {unknown: true, error: err}\r\n            default:\r\n                return err;\r\n          }\r\n    }\r\n\r\n    const formatData = (data) => {\r\n        const desc = capitalizeFirstLetter(data.weather[0].description);\r\n        const temp = Math.trunc(data.main.temp);\r\n        const city = data.name;\r\n        let icon = data.weather[0].icon;\r\n        if(icon.includes(\"n\")) {\r\n            icon = setCharAt(icon, 2, 'd')\r\n        }\r\n        const formattedData = {\r\n            description: desc,\r\n            temperature: temp,\r\n            city: city,\r\n            icon: icon\r\n        }\r\n        setWeatherData(formattedData)\r\n    }\r\n\r\n    const updateLocalStorage = (item, data) => {\r\n        const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n        const updatedWeatherData = {\r\n            ...localWeatherData,\r\n            [item]: data\r\n        }\r\n        localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData));\r\n    }\r\n\r\n    //QOL FUNCTIONS\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function setCharAt(str,index,chr) {\r\n        if(index > str.length-1) return str;\r\n        return str.substring(0,index) + chr + str.substring(index+1);\r\n    }\r\n\r\n    return weatherData && weatherToggled && ( \r\n        <div className=\"content-weather\">\r\n            <span>\r\n                <WeatherIcon name={weatherData.icon}/>\r\n                <h1>{weatherData.temperature}°</h1>\r\n            </span>\r\n            <p>{weatherData.description}</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Weather;\r\n","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\transition-container.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\upload-menu.js",["120","121"],"import React, { useState } from 'react';\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nimport {ReactComponent as ImageIcon} from \"../../icons/settings/image-black-48dp.svg\"\r\nimport {ReactComponent as UploadIcon} from \"../../icons/file_upload-black-48dp.svg\";\r\nimport { useGlobalAuth } from '../../context/global-context';\r\n\r\n\r\nconst UploadMenu = () => {\r\n  const [tempImage, setTempImage] = useState(\"\");\r\n  const [tempFile, setTempFile] = useState(\"\");\r\n  const [imageDimensions, setImageDimensions] = useState()\r\n\r\n  const {setBackgroundImage} = useGlobalAuth();\r\n\r\n\r\n  const handleChange = (file) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", function () {\r\n      setTempImage(this.result)\r\n      calcDimensions(this.result);\r\n    });\r\n    reader.readAsDataURL(file);\r\n    setTempFile(file);\r\n  }\r\n  \r\n  const calcDimensions = (url) => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = function() {\r\n      setImageDimensions({width: this.width, height: this.height})\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setTempFile(\"\");\r\n    setTempImage(\"\")\r\n  }\r\n\r\n  const handleUpload = () => {\r\n    setBackgroundImage(tempImage);\r\n    localStorage.setItem(\"backgroundImg\", tempImage)\r\n  }\r\n\r\n\r\n  return ( \r\n    <div className=\"m-upload-wrapper\">\r\n      <ImageInput handleChange={handleChange}/>\r\n      {tempFile && tempImage && \r\n      <div className=\"m-upload-data\">\r\n        <div className=\"m-upload-data-left\">\r\n          <div className=\"m-upload-data-img\" style={{backgroundImage: tempImage && `url(${tempImage})`}}/>\r\n          <span>\r\n          <h6>{tempFile && tempFile.name}</h6>\r\n          <p>{tempFile && `${tempFile.size}KB`}</p>\r\n          </span>\r\n        </div>\r\n        <div className=\"m-upload-data-right\">\r\n          <button onClick={handleUpload}>Upload</button>\r\n          <button onClick={handleCancel}>Cancel</button>\r\n        </div>\r\n      </div> \r\n      }\r\n    </div>\r\n   );\r\n}\r\n\r\nfunction ImageInput({handleChange}) {\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    maxFiles: 1,\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      acceptedFiles.map((file => {\r\n        handleChange(file)\r\n        return file;\r\n      }))\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps({className: 'm-upload-body'})}>\r\n      <input {...getInputProps()} />\r\n      <ImageIcon/>\r\n      <h6>Drop your image here, or <span>browse</span></h6>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default UploadMenu;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\favorited-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\image-item.js",["122"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport { useGlobalAuth } from '../context/global-context';\r\n\r\n\r\nimport {ReactComponent as HeartOutline} from \"../icons/favorite_border-black-48dp.svg\";\r\nimport {ReactComponent as HeartFilled} from \"../icons/favorite-black-48dp.svg\";\r\n\r\n\r\nconst ImageItem = (img) => {\r\n    const {setCurrentImage, favorited, setFavorited} = useGlobalAuth()\r\n    const [spans, setSpans] = useState(0)\r\n    const heartRef = useRef(null);\r\n    const imageRef = useRef(null);\r\n    const [isHovering, setIsHovering] = useState(false)\r\n    const [image, setImage] = useState(img);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      const updateSpans = () => {\r\n        const height = imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height / 80);\r\n        setSpans(spans);\r\n        //cleanup event listener\r\n        imageRef.current.removeEventListener(\"load\", updateSpans)\r\n      }\r\n  \r\n      const preload = () => {\r\n        let tempImage = new Image();\r\n        tempImage.src = img.urls.small;\r\n        tempImage.onload = function () {\r\n            setLoaded(true)\r\n        }\r\n      }\r\n  \r\n      const fetchFavorites = () => {\r\n        if(favorited) {\r\n          favorited.forEach((item) => {\r\n            if(item.id === image.id) {\r\n              setImage({\r\n                ...image,\r\n                isFavorite: true\r\n              })\r\n            } \r\n          })\r\n        }\r\n      }\r\n\r\n\r\n      imageRef.current.addEventListener(\"load\", updateSpans);\r\n      fetchFavorites();\r\n      preload()\r\n    }, [])\r\n\r\n  \r\n    const updateImage = (e) => {\r\n      if(e.target === heartRef.current) {\r\n        return;\r\n      }\r\n      localStorage.setItem(\"currentImage\", JSON.stringify(image));\r\n      setCurrentImage(image);\r\n    }\r\n  \r\n    const handleFavorite = () => {\r\n      let updatedList = []\r\n      let favoritedList = JSON.parse(localStorage.getItem(\"favorited\"));\r\n  \r\n      if(!favoritedList) {\r\n        updatedList = [\r\n          image\r\n        ]\r\n      }\r\n  \r\n  \r\n      if(favoritedList) {\r\n        let newList = [];\r\n        let duplicateItem = undefined;\r\n  \r\n        favoritedList.forEach(item => {\r\n          //if img already favorite | remove it\r\n          if(item.id === image.id) {\r\n            item.isFavorite = false;\r\n            duplicateItem = item;\r\n            return;\r\n          }\r\n          item.isFavorite = true;\r\n          newList.push(item);\r\n        })\r\n        \r\n        //update list w/ new image\r\n        if(duplicateItem) {\r\n          updatedList = newList;\r\n          setImage({\r\n            ...image,\r\n            isFavorite: false\r\n          })\r\n        } else {\r\n          setImage({\r\n            ...image,\r\n            isFavorite: true\r\n          })\r\n          updatedList = [\r\n            ...newList,\r\n            image\r\n          ]\r\n        }\r\n      }\r\n  \r\n      setFavorited(updatedList);\r\n      \r\n      localStorage.setItem(\"favorited\", JSON.stringify(updatedList));\r\n    }\r\n  \r\n  \r\n    return (\r\n      <div className=\"menu-image-item\" style={{gridRowEnd: `span ${spans}`, opacity: loaded ? 1 : 0}} onMouseOver={() => setIsHovering(true)} onMouseLeave={() => setIsHovering(false)}>\r\n        <span onClick={updateImage}>\r\n        {isHovering && (\r\n          <div className=\"menu-image-item-favorite\">\r\n          <HeartFilled style={{opacity: image.isFavorite ? 1 : 0}} />\r\n          <HeartOutline style={{opacity: image.isFavorite ? 0 : 1}}/>\r\n          <div ref={heartRef} onClick={handleFavorite}/>\r\n        </div>\r\n        )}\r\n        <img\r\n          ref={imageRef}\r\n          src={image.urls.small}\r\n          alt={image.description}\r\n          />\r\n          </span>\r\n      </div>\r\n    )\r\n}\r\n \r\nexport default ImageItem;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\featured-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unplash-menu.js",["123","124"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport {unsplash} from \"../../unsplash-config\";\r\nimport ImageItem from \"../image-item\";\r\n\r\nimport {ReactComponent as SearchIcon} from \"../../icons/search-black-24dp.svg\";\r\n\r\n\r\nconst UnsplashMenu = () => {\r\n    const [images, setImages] = useState([])\r\n    const [query, setQuery] = useState(\"Wallpapers\");\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const defaultQuery = async ( ) => {\r\n            const localData = JSON.parse(localStorage.getItem(\"unsplash\"));\r\n            if(localData) {\r\n                setImages(localData);\r\n            } else {\r\n                const data = await unsplash.search.getPhotos({\r\n                    query: query,\r\n                    featured: true,\r\n                    perPage: 12,\r\n                    orientation: 'landscape'\r\n                });\r\n                setImages(data.response.results);\r\n                localStorage.setItem(\"unsplash\", JSON.stringify(data.response.results));\r\n            }\r\n          }\r\n          defaultQuery()\r\n    }, [])\r\n\r\n    const handleScroll = (e) => {\r\n        console.log(e)\r\n        console.log(e.target.offsetHeight)\r\n        console.log(e.target.scrollTop)\r\n        if(e.target.scrollTop === 175) {\r\n            console.log(\"bottom\")\r\n        }\r\n    }\r\n\r\n    const updateQuery = (title) => {\r\n        console.log(title)\r\n        setQuery(title)\r\n        fetchQuery(title);\r\n    }\r\n\r\n    const fetchQuery = async(query) => {\r\n        const data = await unsplash.search.getPhotos({\r\n            query: query,\r\n            page: 1,\r\n            perPage: 12,\r\n            orientation: 'landscape',\r\n        });\r\n        setImages(data.response.results);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setQuery(inputRef.current.value);\r\n        fetchQuery(inputRef.current.value)\r\n    }\r\n\r\n    return ( \r\n        <div className=\"m-unsplash-wrap\">\r\n            <div className=\"m-unsplash-search\">\r\n                <form onSubmit={handleSubmit}>\r\n                <input ref={inputRef} type=\"text\" placeholder=\"Search\"/>\r\n                <button type=\"submit\">\r\n                    <SearchIcon/>\r\n                </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"m-unsplash-cg\">\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Wallpapers\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Beach\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Nature\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Mountains\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Snow\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Animals\"/> \r\n            </div>\r\n        <div className=\"m-unsplash-query-wrap\" onScroll={handleScroll} >\r\n        <div className=\"m-unsplash-query\">\r\n           {images && images.map((img) => {\r\n               return <ImageItem key={`card-${img.id}`} {...img}/>\r\n           })}\r\n        </div>\r\n        </div>\r\n\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nconst UnsplashCategory = ({title, updateQuery, query}) => {\r\n    useEffect(() => {\r\n        console.log(query)\r\n        console.log(title)\r\n    }, [])\r\n    return (\r\n        <span onClick={() => updateQuery(title)} style={{backgroundColor: query === title && \"orange\"}}>\r\n            <p>{title}</p>\r\n        </span>\r\n    )\r\n}\r\n \r\nexport default UnsplashMenu;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\unsplash-config.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\todo-list-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\board.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\column.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\task.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\key-press.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\quotes\\quote-menu.js",["125"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\quotes\\quotes.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\quote-service.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":30,"column":8,"nodeType":"132","endLine":30,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":83,"column":34,"nodeType":"136","endLine":83,"endColumn":89},{"ruleId":"130","severity":1,"message":"137","line":16,"column":8,"nodeType":"132","endLine":16,"endColumn":24,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":5,"column":27,"nodeType":"141","messageId":"142","endLine":5,"endColumn":37},{"ruleId":"139","severity":1,"message":"143","line":12,"column":10,"nodeType":"141","messageId":"142","endLine":12,"endColumn":25},{"ruleId":"130","severity":1,"message":"144","line":53,"column":8,"nodeType":"132","endLine":53,"endColumn":10,"suggestions":"145"},{"ruleId":"130","severity":1,"message":"146","line":30,"column":8,"nodeType":"132","endLine":30,"endColumn":10,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":98,"column":8,"nodeType":"132","endLine":98,"endColumn":10,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentImage' and 'loaded'. Either include them or remove the dependency array.","ArrayExpression",["153"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["154"],"no-unused-vars","'UploadIcon' is defined but never used.","Identifier","unusedVar","'imageDimensions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'favorited', 'image', and 'img.urls.small'. Either include them or remove the dependency array. You can also do a functional update 'setImage(i => ...)' if you only need 'image' in the 'setImage' call.",["155"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'query' and 'title'. Either include them or remove the dependency array.",["157"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [currentImage, loaded]",{"range":"168","text":"169"},"Update the dependencies array to be: [getWeather, weatherToggled]",{"range":"170","text":"171"},"Update the dependencies array to be: [favorited, image, img.urls.small]",{"range":"172","text":"173"},"Update the dependencies array to be: [query]",{"range":"174","text":"175"},"Update the dependencies array to be: [query, title]",{"range":"176","text":"177"},[1123,1125],"[currentImage, loaded]",[467,483],"[getWeather, weatherToggled]",[1591,1593],"[favorited, image, img.urls.small]",[1080,1082],"[query]",[3364,3366],"[query, title]"]