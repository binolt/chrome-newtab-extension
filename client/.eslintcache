[{"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js":"1","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js":"2","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu.js":"3","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menu.js":"4","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\side-menu.js":"5","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unsplash-menu.js":"6","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu-item.js":"7","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\main-menu.js":"8","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\weather-menu.js":"9","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js":"10","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\todo-list.js":"11","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\column.js":"12","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\task.js":"13","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js":"14","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\key-press.js":"15","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js":"16","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js":"17","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js":"18","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js":"19","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu\\menu.js":"20","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\modal.js":"21","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\menu-context.js":"22","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\featured-backgrounds.js":"23"},{"size":229,"mtime":1612165363849,"results":"24","hashOfConfig":"25"},{"size":246,"mtime":1612050329442,"results":"26","hashOfConfig":"25"},{"size":3463,"mtime":1611962140806,"results":"27","hashOfConfig":"25"},{"size":396,"mtime":1610323265688,"results":"28","hashOfConfig":"25"},{"size":765,"mtime":1610853959392,"results":"29","hashOfConfig":"25"},{"size":5202,"mtime":1612132811247,"results":"30","hashOfConfig":"25"},{"size":421,"mtime":1611010667884,"results":"31","hashOfConfig":"25"},{"size":1195,"mtime":1611091251417,"results":"32","hashOfConfig":"25"},{"size":1366,"mtime":1612050463081,"results":"33","hashOfConfig":"25"},{"size":3326,"mtime":1612171875197,"results":"34","hashOfConfig":"25"},{"size":6545,"mtime":1611241246482,"results":"35","hashOfConfig":"25"},{"size":2748,"mtime":1611960334672,"results":"36","hashOfConfig":"25"},{"size":3217,"mtime":1611960337056,"results":"37","hashOfConfig":"25"},{"size":1076,"mtime":1612169900043,"results":"38","hashOfConfig":"25"},{"size":1093,"mtime":1611092318727,"results":"39","hashOfConfig":"25"},{"size":549,"mtime":1612046178645,"results":"40","hashOfConfig":"25"},{"size":5914,"mtime":1612165404841,"results":"41","hashOfConfig":"25"},{"size":899,"mtime":1612046518919,"results":"42","hashOfConfig":"25"},{"size":2088,"mtime":1612051342238,"results":"43","hashOfConfig":"25"},{"size":6353,"mtime":1612426610492,"results":"44","hashOfConfig":"25"},{"size":1244,"mtime":1612418905415,"results":"45","hashOfConfig":"25"},{"size":636,"mtime":1612421739183,"results":"46","hashOfConfig":"25"},{"size":2007,"mtime":1612478535673,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"8trkmv",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js",[],["105","106"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu.js",[],["107","108"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menu.js",["109"],"import React, { useEffect } from 'react';\r\nimport {useAuth} from \"./menu\"\r\n\r\nconst BackgroundMenu = () => {\r\n    const { currentMenu, previousMenu } = useAuth();\r\n    useEffect(() => {\r\n        console.log(currentMenu)\r\n        console.log(previousMenu)\r\n    }, [])\r\n    return ( \r\n        <div>\r\n            <h1>Background Menu</h1>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BackgroundMenu;",["110","111"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\side-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unsplash-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu-item.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\main-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\weather-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js",["112","113"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport Menu from \"../components/menu/menu\"\r\nimport Weather from './widgets/weather/weather';\r\nimport Moment from \"react-moment\"\r\nimport {useAuth} from \"../context/global-context\";\r\nimport Modal from './modal';\r\n\r\n//ICONS\r\nimport {ReactComponent as MenuIcon} from \"../icons/menu-black-24dp.svg\"; \r\nimport {ReactComponent as Search} from \"../icons/search-black-24dp.svg\" \r\nimport {ReactComponent as Google} from \"../icons/google-icon.svg\" \r\nimport { MenuProvider } from '../context/menu-context';\r\n// import {ReactComponent as CloseIcon} from \"../icons/settings/close-black-48dp.svg\"\r\n\r\nconst Landing = () => {\r\n    //global state\r\n    const {loaded, backgroundImage, setBackgroundImage} = useAuth()\r\n    //local state\r\n    const [date, setDate] = useState(new Date());\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    \r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n    }, [])\r\n  \r\n  \r\n  \r\n    const changeImage = (img) => {\r\n        localStorage.setItem(\"backgroundImg\", img.urls.full);\r\n        setBackgroundImage(img.urls.full)\r\n    }\r\n\r\n    const closeModal = () => {\r\n      setModalIsOpen(false);\r\n    }\r\n\r\n    const openModal = () => {\r\n      setModalIsOpen(true)\r\n    }\r\n  \r\n    return ( \r\n        <div className=\"app\" style={{backgroundImage: `url(${backgroundImage})`, opacity: loaded ? 1 : 0}}>\r\n        {/* <div className=\"app-container\">\r\n\r\n        </div> */}\r\n        <div className=\"content-search\">\r\n          <span className=\"content-search-head\">\r\n          <Google className=\"content-icons-google\"/>\r\n          </span>\r\n          <form action=\"http://www.google.com/search\" method=\"get\"> \r\n            <input type=\"text\" placeholder=\"Enter your search\" name=\"q\"/>\r\n            <button type=\"submit\" value=\"search\" className=\"content-search-foot\">\r\n              <Search/>\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Weather/>\r\n        <div className=\"content-menu-placeholder\" onClick={openModal}>\r\n          <MenuIcon/>\r\n        </div>\r\n        {/* <Modal closeTimeoutMS={250} className=\"menu-modal\" overlayClassName=\"menu-overlay\" onRequestClose={() => setModalIsOpen(false)} isOpen={modalIsOpen} contentLabel=\"modal\">\r\n            <Menu changeImage={changeImage}/>\r\n            <CloseIcon className=\"menu-close\" onClick={() => setModalIsOpen(false)}/>\r\n        </Modal> */}\r\n        <Modal className=\"menu-modal\" overlayClassname=\"menu-modal-overlay\" isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n          <MenuProvider>\r\n          <Menu/>\r\n          </MenuProvider>\r\n        </Modal>\r\n        <div className=\"content-time\">\r\n          <Moment format=\"h:mm\" className=\"content-time-clock\">\r\n            {date}\r\n          </Moment>\r\n          <Moment format=\"dddd, MMMM DD\" className=\"content-time-date\">\r\n            {date}\r\n          </Moment>\r\n        </div>\r\n        <svg style={{width: 0, height: 0, position: \"absolute\"}} aria-hidden=\"true\" focusable=\"false\">\r\n          <linearGradient id=\"my-cool-gradient\" x2=\"1\" y2=\"1\">\r\n              <stop offset=\"0%\" stopColor=\"#07cac3\" />\r\n              <stop offset=\"100%\" stopColor=\"#00ffa2\" />\r\n          </linearGradient>\r\n        </svg>\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default Landing;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\todo-list.js",[],["114","115"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\column.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\task.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\key-press.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js",["116"],"export default {\r\n      fetchCity: (lat, lon) => {\r\n        return fetch(`https://us1.locationiq.com/v1/reverse.php?key=${process.env.REACT_APP_LOCATIONIQ_API_KEY}&lat=${lat}&lon=${lon}&format=json`)\r\n          .then((res) => res.json())\r\n          .then((data) => data);\r\n      },\r\n      fetchWeather: (city) => {\r\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPEN_WEATHER_API_KEY}&units=imperial`)\r\n          .then((res) => res.json())\r\n          .then((data) => data);\r\n      },\r\n}",["117","118"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js",["119","120"],"import React, { useEffect, useState } from 'react';\r\nimport Moment from \"react-moment\";\r\nimport { useAuth } from '../../../context/global-context';\r\nimport weatherService from \"../../../services/weather-service\";\r\nimport WeatherIcon from './weather-icon';\r\n\r\n//ICONS\r\n\r\n\r\nconst Weather = () => {\r\n    const {weatherToggled, setLocationDisabled} = useAuth();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n\r\n    useEffect(() => { \r\n        weatherToggled && getWeather()\r\n    }, [weatherToggled])\r\n\r\n    const getWeather = async() => {\r\n        const location = await fetchLocation()\r\n        //if location services are blocked\r\n        if(location.denied) {\r\n            return;\r\n        }\r\n        //fetch weather api with city\r\n        const data = await weatherService.fetchWeather(location.city);\r\n        formatData(data)\r\n    }\r\n\r\n    const fetchLocation = async () => {\r\n        const coords = await getCoords()\r\n        //if user has location services blocked\r\n        if(coords.denied) {\r\n            return coords;\r\n        }\r\n        // set cords in local storage\r\n        const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n        const updatedWeatherData = {\r\n            ...localWeatherData,\r\n            coords: coords\r\n        }\r\n        localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData));\r\n        //fetch city with coords\r\n        return await getCity(coords);\r\n    }\r\n\r\n    \r\n    const getCoords = async() => {\r\n        return new Promise(function(resolve) {\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                if(position) {\r\n                    //set coords in local storage\r\n                    const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                    const updatedWeatherData = {\r\n                        ...localWeatherData,\r\n                        locationServices: true\r\n                    }\r\n                    localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData))\r\n                    setLocationDisabled(false);\r\n                    //resolve promise w/ coords\r\n                    resolve({longitude: position.coords.longitude, latitude: position.coords.latitude})\r\n                }\r\n            // if user denied geolocation services\r\n            }, function(error) {\r\n                if(error.code === error.PERMISSION_DENIED) {\r\n                    // set location disabled in local storage\r\n                    const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                    const updatedWeatherData = {\r\n                        ...localWeatherData,\r\n                        locationServices: false\r\n                    }\r\n                    localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData))\r\n                    setLocationDisabled(true);\r\n                    //resolve promise w/ error\r\n                    resolve({denied: true, error: error});\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    const getCity = async({longitude, latitude}) => {\r\n        return new Promise(function (resolve) {\r\n            // check local storage for stored city\r\n            const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n            if(localWeatherData.coords && localWeatherData.city) {\r\n                //if user hasn't changed their location\r\n                if(localWeatherData.coords.longitude === longitude && localWeatherData.coords.latitude === latitude) {\r\n                    resolve({city: localWeatherData.city});\r\n                    return;\r\n                }\r\n            }\r\n            // if no local storage data, fetch city from api\r\n            weatherService.fetchCity(latitude, longitude)\r\n            .then(data => {\r\n                const city = data.address.city;\r\n                // set city in local storage\r\n                const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                const updatedWeather = {\r\n                    ...localWeatherData,\r\n                    city: city\r\n                }\r\n                localStorage.setItem(\"weather\", JSON.stringify(updatedWeather));\r\n                //resolve promise with city\r\n                resolve({city: city})\r\n            })\r\n        })\r\n    }\r\n\r\n    const formatData = (data) => {\r\n        const desc = capitalizeFirstLetter(data.weather[0].description);\r\n        const temp = Math.trunc(data.main.temp);\r\n        const city = data.name;\r\n        let icon = data.weather[0].icon;\r\n        if(icon.includes(\"n\")) {\r\n            icon = setCharAt(icon, 2, 'd')\r\n        }\r\n        const formattedData = {\r\n            description: desc,\r\n            temperature: temp,\r\n            city: city,\r\n            icon: icon\r\n        }\r\n        setWeatherData(formattedData)\r\n    }\r\n\r\n    //QOL FUNCTIONS\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function setCharAt(str,index,chr) {\r\n        if(index > str.length-1) return str;\r\n        return str.substring(0,index) + chr + str.substring(index+1);\r\n    }\r\n\r\n    return weatherData && weatherToggled && ( \r\n        <div className=\"content-weather\">\r\n            <span>\r\n                <WeatherIcon name={weatherData.icon}/>\r\n                <h1>{weatherData.temperature}°</h1>\r\n            </span>\r\n            <p>{weatherData.description}</p>\r\n            {/* <span className=\"content-weather-description\">\r\n                <SunnyIcon/>\r\n                <p>{weatherData.description}</p>\r\n            </span>\r\n            <span className=\"content-weather-body\">\r\n                <h1>{weatherData.temperature}°</h1>\r\n                <p>{weatherData.city}</p>\r\n            </span>\r\n            <Moment className=\"content-weather-date\" format=\"ddd\" date={date}/> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Weather;\r\n","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu\\menu.js",["121"],"import React, { useEffect } from 'react';\r\nimport {useAuth} from \"../../context/menu-context\";\r\n\r\n\r\n//icons\r\nimport {ReactComponent as ImageIcon} from \"../../icons/settings/image-black-48dp.svg\";\r\nimport {ReactComponent as ProfileIcon} from \"../../icons/settings/people_alt-black-48dp.svg\";\r\nimport {ReactComponent as WeatherIcon} from \"../../icons/settings/wb_twilight-black-48dp.svg\";\r\nimport {ReactComponent as ClockIcon} from \"../../icons/settings/access_time-black-48dp.svg\";\r\nimport {ReactComponent as TodoIcon} from \"../../icons/settings/layers-black-48dp.svg\";\r\nimport {ReactComponent as QuotesIcon} from \"../../icons/settings/lightbulb-black-48dp.svg\";\r\nimport {ReactComponent as SettingsIcon} from \"../../icons/settings/settings-black-48dp.svg\";\r\nimport {ReactComponent as ChevronLeft} from \"../../icons/chevron_left-black-48dp.svg\";\r\n\r\nimport bg from \"../../images/VYOsxOY.jpg\";\r\nimport FeaturedBackgrounds from '../background-menus/featured-backgrounds';\r\n\r\nconst optionsData = [\r\n    {header: \"Main\", title: \"Main\"},\r\n    {title: \"Background Image\", icon: <ImageIcon/>},\r\n    {title: \"Profile\", icon: <ProfileIcon/>},\r\n    {title: \"Settings\", icon: <SettingsIcon/>},\r\n    {header: \"Widgets\", title: \"Widgets\"},\r\n    {title: \"Weather\", icon: <WeatherIcon/>},\r\n    {title: \"Clock\", icon: <ClockIcon/>},\r\n    {title: \"To-do List\", icon: <TodoIcon/>},\r\n    {title: \"Quotes\", icon: <QuotesIcon/>},\r\n]\r\n\r\n\r\nconst backgroundMenuData = [\r\n    {title: \"Featured\", desc: \"View featured backgrounds to make your homepage pop\", img: \"https://images.unsplash.com/photo-1611465577672-8fc7be1dc826?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"},\r\n    {title: \"Upload\", desc: \"Upload your own custom images\", img: \"https://images.unsplash.com/photo-1518965539400-77d851d65c43?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=633&q=80\"},\r\n    {title: \"Favorite\", desc: \"View all of your favorited backgrounds\", img: \"https://images.unsplash.com/photo-1517191434949-5e90cd67d2b6?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\"},\r\n    {title: \"Unsplash\", desc: \"Browse the Unsplash library for high-quality backgrounds\", img: \"https://images.unsplash.com/photo-1470770841072-f978cf4d019e?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\"},\r\n]\r\n\r\nconst Menu = () => {\r\n    return ( \r\n        <div className=\"menu\">\r\n            <div className=\"menu-header\">\r\n            <h1>Customize Dashboard</h1>\r\n            </div>\r\n            <div className=\"menu-body\">\r\n                <div className=\"menu-body-options\">\r\n                    <hr/>\r\n                    <div className=\"menu-body-options-list\">\r\n                    {optionsData.map((data) => {\r\n                        return <MenuItem key={data.title} {...data}/>\r\n                    })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-body-content\">\r\n                    <ProfileMenu/>\r\n                    <BackgroundMenu/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst MenuItem = ({title, icon, header}) => {\r\n    const {menu, setMenu} = useAuth();\r\n\r\n    const handleClick = () => {\r\n        setMenu(title)\r\n    }\r\n\r\n    if(header) {\r\n        return <p style={{marginTop: header === \"Widgets\" && \"1rem\"}} className=\"menu-body-options-head\">{header}</p>\r\n    }\r\n\r\n    return (\r\n        <div className={menu === title ? `menu-item menu-item-selected` : \"menu-item\"} onClick={handleClick}>\r\n            {icon}\r\n            <p>{title}</p>\r\n            <div className={menu === title ? `menu-item-highlight menu-item-highlight-placeholder` : \"menu-item-highlight-placeholder\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileMenu = () => {\r\n    const {menu} = useAuth();\r\n    return menu === \"Profile\" && (\r\n        <div className=\"menu-body-profile\">\r\n        <div className=\"menu-body-profile-header\">\r\n            <div style={{backgroundImage: `url(${bg})`}}/>\r\n            <span>\r\n                <h6>Steven</h6>\r\n                <p>luongosteven@gmail.com</p>\r\n            </span>\r\n        </div>\r\n        <hr/>\r\n        <section className=\"menu-body-profile-content\">\r\n            <div className=\"menu-body-profile-left\">\r\n                <p>About</p>\r\n                <textarea rows=\"3\" type=\"text\" placeholder=\"Write a note...\"/>\r\n                <span>\r\n                    <button>Upgrade</button>\r\n                    <button>Edit</button>\r\n                </span>\r\n            </div>\r\n            <div className=\"menu-body-profile-right\">\r\n                <span>\r\n                <h4>2.8K</h4>\r\n                <p>Consecutive Days</p>\r\n                </span>\r\n                <span>\r\n                <h4>3.2K</h4>\r\n                <p>Tabs Opened</p>\r\n                </span>\r\n                <span>\r\n                <h4>8.4K</h4>\r\n                <p>Quotes Generated</p>\r\n                </span>\r\n            </div>\r\n        </section>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst BackgroundMenu = () => {\r\n    const {menu, backgroundMenu} = useAuth();\r\n    return menu === \"Background Image\" && (\r\n        <div className=\"menu-background\">\r\n            {backgroundMenu === \"Main\" && backgroundMenuData.map((data) => {\r\n                return <BackgroundMenuCard key={`card-${data.title}`} {...data}/>\r\n            })}\r\n            <SideBackgroundMenu title=\"Featured\">\r\n                <FeaturedBackgrounds/>\r\n            </SideBackgroundMenu>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BackgroundMenuCard = ({img, title, desc}) => {\r\n    const {setBackgroundMenu} = useAuth();\r\n    return (\r\n        <div onClick={() => setBackgroundMenu(title)} className=\"menu-background-card\" style={{backgroundImage: `url(${img})`}}>\r\n        <h6>{title}</h6>\r\n        <p>{desc}</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst SideBackgroundMenu = ({children, title}) => {\r\n    const {backgroundMenu, setBackgroundMenu} = useAuth();\r\n\r\n    return backgroundMenu === title && (\r\n        <div className=\"menu-background-side\">\r\n        <span className=\"menu-background-side-header\">\r\n        <ChevronLeft onClick={() => setBackgroundMenu(\"Main\")}/>\r\n        <p>{title}</p>\r\n        </span>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Menu;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\modal.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\menu-context.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\featured-backgrounds.js",["122","123","124"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport { useAuth } from '../../context/menu-context';\r\nimport { createApi } from 'unsplash-js';\r\n\r\nconst unsplash = createApi({\r\n    accessKey: process.env.REACT_APP_UNSPLASH_API_KEY,\r\n    headers: { 'X-Custom-Header': 'foo' },\r\n});\r\n\r\n\r\n\r\nconst FeaturedBackgrounds = () => {\r\n    const {backgroundMenu} = useAuth()\r\n    const [images, setImages] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    useEffect(() => {\r\n        // const test = async() => {\r\n        //   const data = await unsplash.search.getPhotos({\r\n        //     featured: true,\r\n        //     query: \"wallpapers\",\r\n        //     perPage: 20\r\n        //   })\r\n        //   setImages(data.response.results);\r\n        // }\r\n        // test()\r\n        // setLoaded(true)\r\n        const test = async ( ) => {\r\n          const data = await unsplash.collections.get({\r\n            collectionId: 11624136\r\n          })\r\n          console.log(data)\r\n        }\r\n        test()\r\n      }, [])\r\n    return backgroundMenu === \"Featured\" && ( \r\n        <div className=\"menu-background-featured-wrapper\">\r\n\r\n            <div className=\"menu-background-featured\">\r\n            {loaded && images.map((img) => {\r\n                return <ImageItem key={`card-${img.id}`} {...img}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst ImageItem = (img) => {\r\n  const [spans, setSpans] = useState(0)\r\n  const imageRef = useRef(null)\r\n  useEffect(() => {\r\n    imageRef.current.addEventListener(\"load\", updateSpans);\r\n  }, [])\r\n\r\n  const updateSpans = () => {\r\n    const height = imageRef.current.clientHeight;\r\n    const spans = Math.ceil(height / 80);\r\n    setSpans(spans);\r\n    imageRef.current.removeEventListener(\"load\", updateSpans)\r\n  }\r\n  return (\r\n    <div style={{gridRowEnd: `span ${spans}`}}>\r\n    <img\r\n      ref={imageRef}\r\n      src={img.urls.small}\r\n      alt={img.description}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default FeaturedBackgrounds;",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":9,"column":8,"nodeType":"133","endLine":9,"endColumn":10,"suggestions":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":37,"nodeType":"139","messageId":"140","endLine":1,"endColumn":43},{"ruleId":"137","severity":1,"message":"141","line":31,"column":11,"nodeType":"139","messageId":"140","endLine":31,"endColumn":22},{"ruleId":"125","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":1,"nodeType":"146","endLine":12,"endColumn":2},{"ruleId":"125","replacedBy":"147"},{"ruleId":"127","replacedBy":"148"},{"ruleId":"137","severity":1,"message":"149","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"150","line":17,"column":8,"nodeType":"133","endLine":17,"endColumn":24,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"152","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"153","line":14,"column":20,"nodeType":"139","messageId":"140","endLine":14,"endColumn":29},{"ruleId":"137","severity":1,"message":"154","line":15,"column":20,"nodeType":"139","messageId":"140","endLine":15,"endColumn":29},{"ruleId":"131","severity":1,"message":"155","line":52,"column":6,"nodeType":"133","endLine":52,"endColumn":8,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentMenu' and 'previousMenu'. Either include them or remove the dependency array.","ArrayExpression",["159"],["157"],["158"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'changeImage' is assigned a value but never used.",["157"],["158"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["157"],["158"],"'Moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["160"],"'useEffect' is defined but never used.","'setImages' is assigned a value but never used.","'setLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateSpans'. Either include it or remove the dependency array.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [currentMenu, previousMenu]",{"range":"168","text":"169"},"Update the dependencies array to be: [getWeather, weatherToggled]",{"range":"170","text":"171"},"Update the dependencies array to be: [updateSpans]",{"range":"172","text":"173"},[262,264],"[currentMenu, previousMenu]",[493,509],"[getWeather, weatherToggled]",[1569,1571],"[updateSpans]"]