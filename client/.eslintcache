[{"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js":"1","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js":"2","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js":"3","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js":"4","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\menu-context.js":"5","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\modal.js":"6","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu\\menu.js":"7","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js":"8","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js":"9","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\transition-container.js":"10","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js":"11","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-menu.js":"12","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\upload-menu.js":"13","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js":"14","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\favorited-menu.js":"15","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\image-item.js":"16","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\featured-menu.js":"17","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unplash-menu.js":"18","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\unsplash-config.js":"19"},{"size":243,"mtime":1612580676853,"results":"20","hashOfConfig":"21"},{"size":246,"mtime":1612050329442,"results":"22","hashOfConfig":"21"},{"size":2454,"mtime":1613582201882,"results":"23","hashOfConfig":"21"},{"size":3320,"mtime":1613583294036,"results":"24","hashOfConfig":"21"},{"size":636,"mtime":1612580676845,"results":"25","hashOfConfig":"21"},{"size":1193,"mtime":1613335201479,"results":"26","hashOfConfig":"21"},{"size":7412,"mtime":1613354193814,"results":"27","hashOfConfig":"21"},{"size":4197,"mtime":1613335201480,"results":"28","hashOfConfig":"21"},{"size":1076,"mtime":1612580676845,"results":"29","hashOfConfig":"21"},{"size":578,"mtime":1613431910857,"results":"30","hashOfConfig":"21"},{"size":899,"mtime":1612046518919,"results":"31","hashOfConfig":"21"},{"size":1589,"mtime":1613335201479,"results":"32","hashOfConfig":"21"},{"size":2486,"mtime":1613335201477,"results":"33","hashOfConfig":"21"},{"size":636,"mtime":1613335201482,"results":"34","hashOfConfig":"21"},{"size":542,"mtime":1613485576144,"results":"35","hashOfConfig":"21"},{"size":3748,"mtime":1613581911258,"results":"36","hashOfConfig":"21"},{"size":1075,"mtime":1613492281195,"results":"37","hashOfConfig":"21"},{"size":3575,"mtime":1613581533025,"results":"38","hashOfConfig":"21"},{"size":186,"mtime":1613492235782,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8trkmv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js",[],["82","83"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js",["84","85"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\menu-context.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\modal.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu\\menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js",["86"],"import React, { useEffect, useState } from 'react';\r\nimport { useGlobalAuth } from '../../../context/global-context';\r\nimport weatherService from \"../../../services/weather-service\";\r\nimport WeatherIcon from './weather-icon';\r\n\r\n//ICONS\r\n\r\n\r\nconst Weather = () => {\r\n    const {weatherToggled, setLocationDenied} = useGlobalAuth();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n\r\n    useEffect(() => { \r\n        weatherToggled && getWeather()\r\n    }, [weatherToggled])\r\n\r\n    const getWeather = async() => {\r\n        const location = await fetchLocation()\r\n        //if location services are blocked\r\n        if(location.denied) {\r\n            return;\r\n        }\r\n        //fetch weather api with city\r\n        const data = await weatherService.fetchWeather(location);\r\n        formatData(data)\r\n    }\r\n\r\n    const fetchLocation = async () => {\r\n        return new Promise(async function(resolve) {\r\n            const data = await getCoords()\r\n            //if user has location services blocked\r\n            if(data.denied) {\r\n                updateLocalStorage(\"denied\", true)\r\n                setLocationDenied(true);\r\n                return data;\r\n            }\r\n            // set cords in local storage\r\n            updateLocalStorage(\"coords\", data);\r\n            resolve(data)\r\n        })\r\n    }\r\n    \r\n    const getCoords = async() => {\r\n        return new Promise(function(resolve) {\r\n            if(navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(function(position) {\r\n                    //set location enabled in LS\r\n                    updateLocalStorage(\"denied\", false)\r\n                    setLocationDenied(false);\r\n                    //resolve promise w/ coords\r\n                    resolve({longitude: position.coords.longitude, latitude: position.coords.latitude});\r\n                // ERROR HANDLING\r\n                }, function(error) {\r\n                    const data = handleGeolocationError(error);\r\n                    resolve(data);\r\n                })\r\n            } else {\r\n                console.log(\"Your browser does not support geolocation services.\")\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleGeolocationError = (err) => {\r\n        switch(err.code) {\r\n            case err.PERMISSION_DENIED:\r\n                return {denied: true, error: err}\r\n            case err.POSITION_UNAVAILABLE:\r\n                return {unavailable: true, error: err}\r\n            case err.TIMEOUT:\r\n                return {timeout: true, error: err}\r\n            case err.UNKNOWN_ERROR:\r\n                return {unknown: true, error: err}\r\n            default:\r\n                return err;\r\n          }\r\n    }\r\n\r\n    const formatData = (data) => {\r\n        const desc = capitalizeFirstLetter(data.weather[0].description);\r\n        const temp = Math.trunc(data.main.temp);\r\n        const city = data.name;\r\n        let icon = data.weather[0].icon;\r\n        if(icon.includes(\"n\")) {\r\n            icon = setCharAt(icon, 2, 'd')\r\n        }\r\n        const formattedData = {\r\n            description: desc,\r\n            temperature: temp,\r\n            city: city,\r\n            icon: icon\r\n        }\r\n        setWeatherData(formattedData)\r\n    }\r\n\r\n    const updateLocalStorage = (item, data) => {\r\n        const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n        const updatedWeatherData = {\r\n            ...localWeatherData,\r\n            [item]: data\r\n        }\r\n        localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData));\r\n    }\r\n\r\n    //QOL FUNCTIONS\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function setCharAt(str,index,chr) {\r\n        if(index > str.length-1) return str;\r\n        return str.substring(0,index) + chr + str.substring(index+1);\r\n    }\r\n\r\n    return weatherData && weatherToggled && ( \r\n        <div className=\"content-weather\">\r\n            <span>\r\n                <WeatherIcon name={weatherData.icon}/>\r\n                <h1>{weatherData.temperature}°</h1>\r\n            </span>\r\n            <p>{weatherData.description}</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Weather;\r\n","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\transition-container.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\upload-menu.js",["87","88"],"import React, { useState } from 'react';\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nimport {ReactComponent as ImageIcon} from \"../../icons/settings/image-black-48dp.svg\"\r\nimport {ReactComponent as UploadIcon} from \"../../icons/file_upload-black-48dp.svg\";\r\nimport { useGlobalAuth } from '../../context/global-context';\r\n\r\n\r\nconst UploadMenu = () => {\r\n  const [tempImage, setTempImage] = useState(\"\");\r\n  const [tempFile, setTempFile] = useState(\"\");\r\n  const [imageDimensions, setImageDimensions] = useState()\r\n\r\n  const {setBackgroundImage} = useGlobalAuth();\r\n\r\n\r\n  const handleChange = (file) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", function () {\r\n      setTempImage(this.result)\r\n      calcDimensions(this.result);\r\n    });\r\n    reader.readAsDataURL(file);\r\n    setTempFile(file);\r\n  }\r\n  \r\n  const calcDimensions = (url) => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = function() {\r\n      setImageDimensions({width: this.width, height: this.height})\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setTempFile(\"\");\r\n    setTempImage(\"\")\r\n  }\r\n\r\n  const handleUpload = () => {\r\n    setBackgroundImage(tempImage);\r\n    localStorage.setItem(\"backgroundImg\", tempImage)\r\n  }\r\n\r\n\r\n  return ( \r\n    <div className=\"m-upload-wrapper\">\r\n      <ImageInput handleChange={handleChange}/>\r\n      {tempFile && tempImage && \r\n      <div className=\"m-upload-data\">\r\n        <div className=\"m-upload-data-left\">\r\n          <div className=\"m-upload-data-img\" style={{backgroundImage: tempImage && `url(${tempImage})`}}/>\r\n          <span>\r\n          <h6>{tempFile && tempFile.name}</h6>\r\n          <p>{tempFile && `${tempFile.size}KB`}</p>\r\n          </span>\r\n        </div>\r\n        <div className=\"m-upload-data-right\">\r\n          <button onClick={handleUpload}>Upload</button>\r\n          <button onClick={handleCancel}>Cancel</button>\r\n        </div>\r\n      </div> \r\n      }\r\n    </div>\r\n   );\r\n}\r\n\r\nfunction ImageInput({handleChange}) {\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    maxFiles: 1,\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      acceptedFiles.map((file => {\r\n        handleChange(file)\r\n        return file;\r\n      }))\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps({className: 'm-upload-body'})}>\r\n      <input {...getInputProps()} />\r\n      <ImageIcon/>\r\n      <h6>Drop your image here, or <span>browse</span></h6>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default UploadMenu;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\favorited-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\image-item.js",["89"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\featured-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unplash-menu.js",["90","91"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport {unsplash} from \"../../unsplash-config\";\r\nimport ImageItem from \"../image-item\";\r\n\r\nimport {ReactComponent as SearchIcon} from \"../../icons/search-black-24dp.svg\";\r\n\r\n\r\nconst UnsplashMenu = () => {\r\n    const [images, setImages] = useState([])\r\n    const [query, setQuery] = useState(\"Wallpapers\");\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const defaultQuery = async ( ) => {\r\n            const localData = JSON.parse(localStorage.getItem(\"unsplash\"));\r\n            if(localData) {\r\n                setImages(localData);\r\n            } else {\r\n                const data = await unsplash.search.getPhotos({\r\n                    query: query,\r\n                    featured: true,\r\n                    perPage: 12,\r\n                    orientation: 'landscape'\r\n                });\r\n                setImages(data.response.results);\r\n                localStorage.setItem(\"unsplash\", JSON.stringify(data.response.results));\r\n            }\r\n          }\r\n          defaultQuery()\r\n    }, [])\r\n\r\n    const handleScroll = (e) => {\r\n        console.log(e)\r\n        console.log(e.target.offsetHeight)\r\n        console.log(e.target.scrollTop)\r\n        if(e.target.scrollTop === 175) {\r\n            console.log(\"bottom\")\r\n        }\r\n    }\r\n\r\n    const updateQuery = (title) => {\r\n        console.log(title)\r\n        setQuery(title)\r\n        fetchQuery(title);\r\n    }\r\n\r\n    const fetchQuery = async(query) => {\r\n        const data = await unsplash.search.getPhotos({\r\n            query: query,\r\n            page: 1,\r\n            perPage: 12,\r\n            orientation: 'landscape',\r\n        });\r\n        setImages(data.response.results);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setQuery(inputRef.current.value);\r\n        fetchQuery(inputRef.current.value)\r\n    }\r\n\r\n    return ( \r\n        <div className=\"m-unsplash-wrap\">\r\n            <div className=\"m-unsplash-search\">\r\n                <form onSubmit={handleSubmit}>\r\n                <input ref={inputRef} type=\"text\" placeholder=\"Search\"/>\r\n                <button type=\"submit\">\r\n                    <SearchIcon/>\r\n                </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"m-unsplash-cg\">\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Wallpapers\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Beach\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Nature\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Mountains\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Snow\"/>\r\n                <UnsplashCategory query={query} updateQuery={updateQuery} title=\"Animals\"/> \r\n            </div>\r\n        <div className=\"m-unsplash-query-wrap\" onScroll={handleScroll} >\r\n        <div className=\"m-unsplash-query\">\r\n           {images && images.map((img) => {\r\n               return <ImageItem key={`card-${img.id}`} {...img}/>\r\n           })}\r\n        </div>\r\n        </div>\r\n\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nconst UnsplashCategory = ({title, updateQuery, query}) => {\r\n    useEffect(() => {\r\n        console.log(query)\r\n        console.log(title)\r\n    }, [])\r\n    return (\r\n        <span onClick={() => updateQuery(title)} style={{backgroundColor: query === title && \"orange\"}}>\r\n            <p>{title}</p>\r\n        </span>\r\n    )\r\n}\r\n \r\nexport default UnsplashMenu;","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\unsplash-config.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":28,"column":8,"nodeType":"98","endLine":28,"endColumn":10,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":81,"column":34,"nodeType":"102","endLine":81,"endColumn":89},{"ruleId":"96","severity":1,"message":"103","line":16,"column":8,"nodeType":"98","endLine":16,"endColumn":24,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":5,"column":27,"nodeType":"107","messageId":"108","endLine":5,"endColumn":37},{"ruleId":"105","severity":1,"message":"109","line":12,"column":10,"nodeType":"107","messageId":"108","endLine":12,"endColumn":25},{"ruleId":"96","severity":1,"message":"110","line":53,"column":8,"nodeType":"98","endLine":53,"endColumn":10,"suggestions":"111"},{"ruleId":"96","severity":1,"message":"112","line":30,"column":8,"nodeType":"98","endLine":30,"endColumn":10,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"114","line":98,"column":8,"nodeType":"98","endLine":98,"endColumn":10,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentImage' and 'loaded'. Either include them or remove the dependency array.","ArrayExpression",["118"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["119"],"no-unused-vars","'UploadIcon' is defined but never used.","Identifier","unusedVar","'imageDimensions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'favorited', 'image', and 'img.urls.small'. Either include them or remove the dependency array. You can also do a functional update 'setImage(i => ...)' if you only need 'image' in the 'setImage' call.",["120"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'query' and 'title'. Either include them or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [currentImage, loaded]",{"range":"133","text":"134"},"Update the dependencies array to be: [getWeather, weatherToggled]",{"range":"135","text":"136"},"Update the dependencies array to be: [favorited, image, img.urls.small]",{"range":"137","text":"138"},"Update the dependencies array to be: [query]",{"range":"139","text":"140"},"Update the dependencies array to be: [query, title]",{"range":"141","text":"142"},[1023,1025],"[currentImage, loaded]",[467,483],"[getWeather, weatherToggled]",[1591,1593],"[favorited, image, img.urls.small]",[1080,1082],"[query]",[3364,3366],"[query, title]"]