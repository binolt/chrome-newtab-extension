[{"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js":"1","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js":"2","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu.js":"3","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menu.js":"4","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\side-menu.js":"5","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unsplash-menu.js":"6","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu-item.js":"7","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\main-menu.js":"8","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\weather-menu.js":"9","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js":"10","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\todo-list.js":"11","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\column.js":"12","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\task.js":"13","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js":"14","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\key-press.js":"15","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js":"16","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js":"17","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js":"18","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js":"19"},{"size":291,"mtime":1611960217002,"results":"20","hashOfConfig":"21"},{"size":246,"mtime":1612050329442,"results":"22","hashOfConfig":"21"},{"size":3463,"mtime":1611962140806,"results":"23","hashOfConfig":"21"},{"size":396,"mtime":1610323265688,"results":"24","hashOfConfig":"21"},{"size":765,"mtime":1610853959392,"results":"25","hashOfConfig":"21"},{"size":4901,"mtime":1610569410865,"results":"26","hashOfConfig":"21"},{"size":421,"mtime":1611010667884,"results":"27","hashOfConfig":"21"},{"size":1195,"mtime":1611091251417,"results":"28","hashOfConfig":"21"},{"size":1366,"mtime":1612050463081,"results":"29","hashOfConfig":"21"},{"size":2779,"mtime":1612051036740,"results":"30","hashOfConfig":"21"},{"size":6545,"mtime":1611241246482,"results":"31","hashOfConfig":"21"},{"size":2748,"mtime":1611960334672,"results":"32","hashOfConfig":"21"},{"size":3217,"mtime":1611960337056,"results":"33","hashOfConfig":"21"},{"size":1080,"mtime":1611092318670,"results":"34","hashOfConfig":"21"},{"size":1093,"mtime":1611092318727,"results":"35","hashOfConfig":"21"},{"size":549,"mtime":1612046178645,"results":"36","hashOfConfig":"21"},{"size":5941,"mtime":1612050407598,"results":"37","hashOfConfig":"21"},{"size":899,"mtime":1612046518919,"results":"38","hashOfConfig":"21"},{"size":2088,"mtime":1612051342238,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8trkmv",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\index.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\App.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menu.js",["84"],"import React, { useEffect } from 'react';\r\nimport {useAuth} from \"./menu\"\r\n\r\nconst BackgroundMenu = () => {\r\n    const { currentMenu, previousMenu } = useAuth();\r\n    useEffect(() => {\r\n        console.log(currentMenu)\r\n        console.log(previousMenu)\r\n    }, [])\r\n    return ( \r\n        <div>\r\n            <h1>Background Menu</h1>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BackgroundMenu;",["85","86"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\side-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\background-menus\\unsplash-menu.js",[],["87","88"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\menu-item.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\main-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\weather-menu.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\landing.js",["89"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\todo-list.js",[],["90","91"],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\column.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\todo-list\\task.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\click-outside.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\functions\\key-press.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\services\\weather-service.js",["92"],"export default {\r\n      fetchCity: (lat, lon) => {\r\n        return fetch(`https://us1.locationiq.com/v1/reverse.php?key=${process.env.REACT_APP_LOCATIONIQ_API_KEY}&lat=${lat}&lon=${lon}&format=json`)\r\n          .then((res) => res.json())\r\n          .then((data) => data);\r\n      },\r\n      fetchWeather: (city) => {\r\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPEN_WEATHER_API_KEY}&units=imperial`)\r\n          .then((res) => res.json())\r\n          .then((data) => data);\r\n      },\r\n}","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather.js",["93","94"],"import React, { useEffect, useState } from 'react';\r\nimport Moment from \"react-moment\";\r\nimport { useAuth } from '../../../context/global-context';\r\nimport weatherService from \"../../../services/weather-service\";\r\nimport WeatherIcon from './weather-icon';\r\n\r\n//ICONS\r\n\r\n\r\nconst Weather = () => {\r\n    const {weatherToggled, setLocationDisabled} = useAuth();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n\r\n    useEffect(() => { \r\n        weatherToggled && getWeather()\r\n    }, [weatherToggled])\r\n\r\n    const getWeather = async() => {\r\n        const location = await fetchLocation()\r\n        //if location services are blocked\r\n        if(location.denied) {\r\n            return;\r\n        }\r\n        //fetch weather api with city\r\n        const data = await weatherService.fetchWeather(location.city);\r\n        formatData(data)\r\n    }\r\n\r\n    const fetchLocation = async () => {\r\n        const coords = await getCoords()\r\n        //if user has location services blocked\r\n        if(coords.denied) {\r\n            return coords;\r\n        }\r\n        // set cords in local storage\r\n        const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n        const updatedWeatherData = {\r\n            ...localWeatherData,\r\n            coords: coords\r\n        }\r\n        localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData));\r\n        //fetch city with coords\r\n        return await getCity(coords);\r\n    }\r\n\r\n    \r\n    const getCoords = async() => {\r\n        return new Promise(function(resolve) {\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                if(position) {\r\n                    //set coords in local storage\r\n                    const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                    const updatedWeatherData = {\r\n                        ...localWeatherData,\r\n                        locationServices: true\r\n                    }\r\n                    localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData))\r\n                    setLocationDisabled(false);\r\n                    //resolve promise w/ coords\r\n                    resolve({longitude: position.coords.longitude, latitude: position.coords.latitude})\r\n                }\r\n            // if user denied geolocation services\r\n            }, function(error) {\r\n                if(error.code === error.PERMISSION_DENIED) {\r\n                    // set location disabled in local storage\r\n                    const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                    const updatedWeatherData = {\r\n                        ...localWeatherData,\r\n                        locationServices: false\r\n                    }\r\n                    localStorage.setItem(\"weather\", JSON.stringify(updatedWeatherData))\r\n                    setLocationDisabled(true);\r\n                    //resolve promise w/ error\r\n                    resolve({denied: true, error: error});\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    const getCity = async({longitude, latitude}) => {\r\n        return new Promise(function (resolve) {\r\n            // check local storage for stored city\r\n            const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n            if(localWeatherData.coords && localWeatherData.city) {\r\n                //if user hasn't changed their location\r\n                if(localWeatherData.coords.longitude === longitude && localWeatherData.coords.latitude === latitude) {\r\n                    resolve({city: localWeatherData.city});\r\n                    return;\r\n                }\r\n            }\r\n            // if no local storage data, fetch city from api\r\n            weatherService.fetchCity(latitude, longitude)\r\n            .then(data => {\r\n                const city = data.address.city;\r\n                // set city in local storage\r\n                const localWeatherData = JSON.parse(localStorage.getItem(\"weather\"));\r\n                const updatedWeather = {\r\n                    ...localWeatherData,\r\n                    city: city\r\n                }\r\n                localStorage.setItem(\"weather\", JSON.stringify(updatedWeather));\r\n                //resolve promise with city\r\n                resolve({city: city})\r\n            })\r\n        })\r\n    }\r\n\r\n    const formatData = (data) => {\r\n        console.log(data)\r\n        const desc = capitalizeFirstLetter(data.weather[0].description);\r\n        const temp = Math.trunc(data.main.temp);\r\n        const city = data.name;\r\n        let icon = data.weather[0].icon;\r\n        if(icon.includes(\"n\")) {\r\n            icon = setCharAt(icon, 2, 'd')\r\n        }\r\n        const formattedData = {\r\n            description: desc,\r\n            temperature: temp,\r\n            city: city,\r\n            icon: icon\r\n        }\r\n        setWeatherData(formattedData)\r\n    }\r\n\r\n    //QOL FUNCTIONS\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    function setCharAt(str,index,chr) {\r\n        if(index > str.length-1) return str;\r\n        return str.substring(0,index) + chr + str.substring(index+1);\r\n    }\r\n\r\n    return weatherData && weatherToggled && ( \r\n        <div className=\"content-weather\">\r\n            <span>\r\n                <WeatherIcon name={weatherData.icon}/>\r\n                <h1>{weatherData.temperature}°</h1>\r\n            </span>\r\n            <p>{weatherData.description}</p>\r\n            {/* <span className=\"content-weather-description\">\r\n                <SunnyIcon/>\r\n                <p>{weatherData.description}</p>\r\n            </span>\r\n            <span className=\"content-weather-body\">\r\n                <h1>{weatherData.temperature}°</h1>\r\n                <p>{weatherData.city}</p>\r\n            </span>\r\n            <Moment className=\"content-weather-date\" format=\"ddd\" date={date}/> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Weather;\r\n","C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\components\\widgets\\weather\\weather-icon.js",[],"C:\\Users\\steven\\Documents\\GitHub\\chrome-newtab-extension\\client\\src\\context\\global-context.js",[],{"ruleId":"95","severity":1,"message":"96","line":9,"column":8,"nodeType":"97","endLine":9,"endColumn":10,"suggestions":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":6,"column":9,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":1,"nodeType":"113","endLine":12,"endColumn":2},{"ruleId":"105","severity":1,"message":"114","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"115","line":17,"column":8,"nodeType":"97","endLine":17,"endColumn":24,"suggestions":"116"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentMenu' and 'previousMenu'. Either include them or remove the dependency array.","ArrayExpression",["117"],"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar",["118"],["119"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["120"],{"desc":"121","fix":"122"},"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [currentMenu, previousMenu]",{"range":"125","text":"126"},"Update the dependencies array to be: [getWeather, weatherToggled]",{"range":"127","text":"128"},[262,264],"[currentMenu, previousMenu]",[493,509],"[getWeather, weatherToggled]"]